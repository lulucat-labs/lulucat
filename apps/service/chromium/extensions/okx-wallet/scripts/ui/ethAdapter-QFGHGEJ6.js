import{a as R,b as y,c as O}from"./chunk-7SYMQ5C7.js";import"./chunk-3XTQ4Z2I.js";import"./chunk-2W7DJLXZ.js";import{a as _}from"./chunk-WPXOTIER.js";import"./chunk-Z67IQOKK.js";import"./chunk-RZDDSSXU.js";import{a as M,b as S}from"./chunk-3OCLT7XJ.js";import"./chunk-MIHA7WB3.js";import"./chunk-UEHNGOG4.js";import"./chunk-2NGLDVXQ.js";import"./chunk-RQNRRXKS.js";import{a as H}from"./chunk-HEDYF2ME.js";import"./chunk-2LNDMD6C.js";import"./chunk-OAAPCU3J.js";import"./chunk-W4PU74UA.js";import"./chunk-WQANRNZ2.js";import"./chunk-74FNJDB7.js";import"./chunk-N4B7HQY5.js";import"./chunk-TKFT6XV3.js";import"./chunk-XRF6BZHR.js";import"./chunk-OWU5GWTN.js";import{a as K}from"./chunk-2BGRD7AD.js";import"./chunk-2UKLMOTV.js";import{a as f}from"./chunk-ZWQEMYA4.js";import"./chunk-ELX2GHLL.js";import"./chunk-AIPMH74P.js";import"./chunk-DJDG7W5Q.js";import{W as u,_a as D}from"./chunk-Q23SA7M6.js";import"./chunk-XXICVAVV.js";import"./chunk-E44TZGUB.js";import"./chunk-KBQXBPIW.js";import"./chunk-364XNTHB.js";import"./chunk-NBWNTERD.js";import"./chunk-W7JONHX2.js";import"./chunk-O3LHCDGR.js";import"./chunk-PDSGFBX4.js";import"./chunk-2RHSM47Y.js";import"./chunk-3MCJH4Z7.js";import"./chunk-AGN4QMRN.js";import"./chunk-FV56V3FL.js";import"./chunk-7MZSFBF4.js";import"./chunk-3SRT54EN.js";import"./chunk-J5P7OMUC.js";import"./chunk-OMIXKWD3.js";import"./chunk-PBODVK5S.js";import"./chunk-KHHBU7RQ.js";import"./chunk-3CPUV3E7.js";import"./chunk-SHMKQUVK.js";import{f as g,o as E,q as I}from"./chunk-FJHLV356.js";E();I();var v=g(R()),P=g(_()),o=g(K());D();var w=v.default.HardwareWebSdk,T=class extends O{async signTransaction(l,e,p){return new Promise((r,n)=>{(async()=>{let{onekeyInfo:s,hdPathMap:t}=l,i;try{i=await this.initOneKey({onekeyInfo:s,onUiCancel(){n(new Error(f))}})}catch(m){return n(this.handleErrors(m))}e=H(e);let c=await M(e),d=t[u],{success:h,payload:a}=await w.evmSignTransaction(s?.connectId,i,{path:d,transaction:{...c.toJSON(),to:(0,o.bufferToHex)(c.to).toString(),chainId:e.chainId}});if(y.closeModal(),h){let m=await S(c,a);return r(p?m:{rawTxResult:m})}return n(this.handleErrors(a))})()})}async signPersonalMessage(l,e={}){return new Promise((p,r)=>{(async()=>{let{onekeyInfo:n,hdPathMap:s}=l,t;try{t=await this.initOneKey({onekeyInfo:n,onUiCancel(){r(new Error(f))}})}catch(a){return r(this.handleErrors(a))}let{data:i=""}=e||{},c=s[u],{success:d,payload:h}=await w.evmSignMessage(n?.connectId,t,{path:c,messageHex:(0,o.stripHexPrefix)(i)});if(y.closeModal(),d){let{signature:a=""}=h||{};return p((0,o.addHexPrefix)(a))}return r(this.handleErrors(h))})()})}async signTypedData(l,e={}){return new Promise((p,r)=>{(async()=>{let{onekeyInfo:n,hdPathMap:s}=l,t;try{t=await this.initOneKey({onekeyInfo:n,onUiCancel(){r(new Error(f))}})}catch(k){return r(this.handleErrors(k))}let i=s[u];if(!(e.version==="V4"))return y.closeModal(),r(new Error("OneKey: Only version 4 of typed data signing is supported"));let d=JSON.parse(e.data),{domain_separator_hash:h,message_hash:a}=(0,P.default)(d,!0),{success:m,payload:x}=await w.evmSignTypedData(n?.connectId,t,{path:i,data:d,metamask_v4_compat:!0,domainHash:h,messageHash:a});return y.closeModal(),m?p((0,o.addHexPrefix)(x?.signature)):r(this.handleErrors(x))})()})}},J=new T;export{J as default};

window.inOKXExtension = true;
window.inMiniApp = false;
window.ASSETS_BUILD_TYPE = "publish";

//# sourceMappingURL=ethAdapter-QFGHGEJ6.js.map
